<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Storyboard x:Key="HideAnimation">
        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" 
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">-->
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
            <!--<EasingDoubleKeyFrame KeyTime="0" Value="{Binding ElementName=LayoutRoot, Path=ActualWidth}" />-->
            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-45" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="ShowAnimation">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
            <EasingDoubleKeyFrame KeyTime="0" Value="-45" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!--<VisualStateGroup x:Name="VisualStateGroup">
        <VisualState x:Name="EditMode" Storyboard="{StaticResource sb1}" />
        <VisualState x:Name="SelectionMode" Storyboard="{StaticResource sb2}" />
    </VisualStateGroup>-->

    <Style x:Key="NavbarTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="TabStripPlacement" Value="Left" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="0" Y="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" 
                          Name="LayoutRoot"
                          SnapsToDevicePixels="True" 
                          KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <!--<RowDefinition Height="40"/>-->
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!--<Border Background="DarkGray" Width="Auto" Grid.Row="0">
                            <ToggleButton OverridesDefaultStyle="True" 
                                          IsChecked="{Binding IsExpanded}"
                                          Grid.Row="0" 
                                          Grid.Column="0"
                                          Margin="10,5,5,5">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border BorderThickness="0" Background="DarkGray">
                                                        <ContentPresenter/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                                <ToggleButton.ContentTemplate>
                                    <DataTemplate>
                                        <Rectangle Fill="Black" Height="16" Width="16" x:Name="rect" Margin="5,5,10,5">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Visual="{StaticResource appbar_add}" Stretch="Fill" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ToggleButton}},Path=IsMouseOver}" Value="True">
                                                <Setter TargetName="rect" Property="Fill" Value="Red" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ToggleButton}},Path=IsChecked}" Value="True">
                                                <Setter TargetName="rect" Property="Fill" Value="Red" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ToggleButton.ContentTemplate>
                            </ToggleButton>
                        </Border>-->

                        <!--<Border Grid.Column="1" Grid.Row="0" Background="LightGray">
                            <TextBlock Text="{Binding Path=CurrentTab.ContentTitle}" 
                                       FontSize="20" 
                                       FontWeight="Bold" 
                                       HorizontalAlignment="Left" 
                                       Margin="20,0,0,0" 
                                       VerticalAlignment="Center"/>
                        </Border>-->

                        <Border x:Name="HeaderBorder" 
                                Background="LightGray" 
                                Width="Auto" 
                                Grid.Row="0" 
                                Grid.Column="0">
                            <DockPanel>
                                <TabPanel IsItemsHost="True" Name="HeaderPanel" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" DockPanel.Dock="Top" MinWidth="45"/>
                                <ToggleButton DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border BorderThickness="0" Name="Chrome">
                                                            <Rectangle Fill="Black" 
                                                                        Height="16" 
                                                                        Width="16"
                                                                        Margin="5,10">
                                                                <Rectangle.OpacityMask>
                                                                    <VisualBrush Visual="{StaticResource appbar_cog}" Stretch="Fill" />
                                                                </Rectangle.OpacityMask>
                                                            </Rectangle>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="Chrome" Property="Background" Value="DarkGray" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </DockPanel>
                        </Border>

                        <Grid Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="1" Grid.Row="0">
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="Transparent" 
                                    BorderThickness="1,0,1,0">
                                <ContentPresenter Content="{TemplateBinding SelectedContent}" 
                                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                                  ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" 
                                                  ContentSource="SelectedContent" 
                                                  Name="PART_SelectedContentHost" 
                                                  Margin="5,5,5,5" 
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsVisible}" Value="True">
                <DataTrigger.EnterActions>
                    <!--<BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-45" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>-->
                    
                    <BeginStoryboard Storyboard="{StaticResource ShowAnimation}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <!--<BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                --><!--<EasingDoubleKeyFrame KeyTime="0" Value="{Binding ElementName=LayoutRoot, Path=ActualWidth}" />--><!--
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>-->
                    <BeginStoryboard Storyboard="{StaticResource HideAnimation}" />
                </DataTrigger.ExitActions>
            </DataTrigger>
            <!--<DataTrigger Binding="{Binding IsVisible}" Value="False">
                
            </DataTrigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="NavbarTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="FontFamily" Value="./#Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border SnapsToDevicePixels="True" Name="Border"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Name="Marker" Background="#E84131" HorizontalAlignment="Left" Visibility="Collapsed"/>
                            <ContentPresenter Grid.Column="1"
                                              VerticalAlignment="Center" 
                                              RecognizesAccessKey="True" 
                                              ContentSource="Header" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Marker" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>

                <Setter Property="Background" Value="DarkGray" />
                <Setter Property="Foreground" Value="White" />
            </MultiTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Black" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>