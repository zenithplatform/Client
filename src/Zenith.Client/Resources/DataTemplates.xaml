<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:model="clr-namespace:Zenith.Client.ViewModel"
                    xmlns:converters="clr-namespace:Zenith.Client.Converters"
                    xmlns:SharedConverters="clr-namespace:Zenith.Client.Shared.Converters;assembly=Zenith.Client.Shared"
                    xmlns:views="clr-namespace:Zenith.Client.Views">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Zenith.Client;component/Resources/Styles.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Zenith.Client;component/Resources/Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <converters:HelpCommandParametersConverter x:Key="helpCmdConverter" />
    <SharedConverters:KeyToResourceConverter x:Key="keyResourceConverter" />

    <DataTemplate x:Key="ObservationDataTemplate" DataType="{x:Type model:ObjectDetailsItemViewModel}">
        <Border BorderBrush="Transparent" BorderThickness="1" Name="ItemBorder">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" />
                    <ColumnDefinition Width="200*" />
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal" Grid.Column="0" DockPanel.Dock="Left">
                    <Label Content="{Binding Name}" FontWeight="Bold" HorizontalAlignment="Left" Name="Measurement"/>
                    <Button Width="17" 
                                        Height="17" 
                                        BorderBrush="Transparent" BorderThickness="0"
                                        Command="{Binding HelpCommand}"
                                        x:Name="obsDataItemHelp"
                                        VerticalAlignment="Top"
                                        Margin="5,5,0,0"
                                        Cursor="Hand">
                        <Button.Template>
                            <ControlTemplate>
                                <Border HorizontalAlignment="Center" VerticalAlignment="Center" >
                                    <Image Source="pack://application:,,,/Zenith.Client;component/Resources/Images/help-circled-16-000000.png" 
                                                                            Width="16" 
                                                                            Height="16"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}" Value="True" />
                                            <Condition Binding="{Binding Path=HasHelp}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource helpCmdConverter}">
                                <MultiBinding.Bindings>
                                    <Binding Path="." />
                                    <Binding ElementName="obsDataItemBadge" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                    <Button Width="17"  Height="17" 
                                        BorderBrush="Transparent" BorderThickness="0"
                                        Command="{Binding HelpCommand}"
                                        x:Name="obsDataItemCopy"
                                        VerticalAlignment="Top"
                                        Margin="5,5,0,0"
                                        Cursor="Hand">
                        <Button.Template>
                            <ControlTemplate>
                                <Border HorizontalAlignment="Center" VerticalAlignment="Center" >
                                    <Image Source="pack://application:,,,/Zenith.Client;component/Resources/Images/copy-16-000000.png" 
                                                                            Width="16" 
                                                                            Height="16"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}" Value="True" />
                                            <Condition Binding="{Binding Path=HasHelp}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <!--<Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource copyCmdConverter}">
                                            <MultiBinding.Bindings>
                                                <Binding Path="." />
                                                <Binding ElementName="obsDataItemBadge" />
                                            </MultiBinding.Bindings>
                                        </MultiBinding>
                                    </Button.CommandParameter>-->
                    </Button>
                </StackPanel>

                <ItemsControl ItemsSource="{Binding Values}" x:Name="valuesContainer" Grid.Column="1" Margin="10">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding FormattedDisplayValue}" HorizontalAlignment="Right"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </Border>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True">
                <Setter TargetName="ItemBorder" Property="Background" Value="LightGray" />
                <!--<Setter Property="Background" Value="Transparent" />-->
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                <Setter TargetName="ItemBorder" Property="Background" Value="LightGray" />
                <!--<Setter TargetName="Measurement" Property="Foreground" Value="White" />-->
            </DataTrigger>
            <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>-->
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="NavbarHeaderVisualTemplate">
        <StackPanel Orientation="Horizontal" Margin="5" Width="{Binding Header.CurrentWidth, Mode=TwoWay}">
            <Path Data="{Binding Header.ImageResourceKey, Converter={StaticResource keyResourceConverter}}" 
                  Stretch="Uniform" 
                  Width="16" 
                  Height="16"
                  Fill="Black"
                  Margin="5"/>
            <TextBlock 
                Text="{Binding Header.HeaderText}" 
                VerticalAlignment="Center"
                Margin="10,0,0,0"
                Width="Auto" 
                Visibility="{Binding Header.TextVisible, Mode=TwoWay}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="NavbarHeaderImageTemplate">
        <StackPanel Orientation="Horizontal">
            <Image Source="{Binding Header.ImageSource}" Stretch="Uniform" Margin="5,5,10,5" Height="22" Width="22"/>
            <TextBlock Text="{Binding Header.HeaderText}" VerticalAlignment="Center" Width="Auto" Visibility="{Binding Header.TextVisible, Mode=TwoWay}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="CatalogResultItemTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="col1" Width="40" />
                <ColumnDefinition SharedSizeGroup="col2" Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="150*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Image Grid.Column="0" Grid.Row="0" Source="{Binding Image}" Width="24" Height="24" Margin="5" />

            <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Vertical" Margin="5">
                <TextBlock Text="{Binding Name}" TextWrapping="Wrap" FontWeight="Bold" />
                <TextBlock Text="{Binding Description}" TextWrapping="Wrap" />
            </StackPanel>

            <Separator Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="3">
                <TextBlock Text="Popularity :" Margin="10,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <ProgressBar Value="{Binding Popularity}" 
                                             Margin="10,0,0,0" 
                                             Width="150" 
                                             Maximum="1" 
                                             Minimum="0">
                    <ProgressBar.Style>
                        <Style TargetType="ProgressBar">
                            <Setter Property="Foreground" Value="Red" />
                            <Setter Property="Height" Value="10" />
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
                <TextBlock Text="{Binding Popularity}" Margin="10,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold"/>
            </StackPanel>

            <Expander Grid.Column="1" 
                      Grid.Row="1" 
                      Header="More..." 
                      Margin="0,5,10,0" 
                      Style="{StaticResource MinimalExpanderStyle}">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Wavelegths :" Margin="5"/>
                        <ItemsControl ItemsSource="{Binding Wavelengths}" Margin="10,5,10,5"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Astronomy :" Margin="5" />
                        <ItemsControl ItemsSource="{Binding Astronomy}" Margin="10,5,10,5"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Links :" Margin="5"/>
                        <ItemsControl ItemsSource="{Binding Links}" Margin="10,5,10,5"/>
                    </StackPanel>
                </StackPanel>
            </Expander>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ObjectsResultItemTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="col1" Width="40" />
                <ColumnDefinition SharedSizeGroup="col2" Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="150*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Image Grid.Column="0" Grid.Row="0" Source="{Binding Image}" Width="24" Height="24" Margin="5" />

            <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Vertical" Margin="5">
                <TextBlock Text="{Binding Name}" TextWrapping="Wrap" FontWeight="Bold" />
                <TextBlock Text="{Binding Constellation}" TextWrapping="Wrap" />
            </StackPanel>

            <Separator Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="3">
                <TextBlock Text="Coordinates" Margin="10,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <!--<TextBlock Text="Popularity :" Margin="10,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <ProgressBar Value="{Binding Popularity}" 
                                             Margin="10,0,0,0" 
                                             Width="150" 
                                             Maximum="1" 
                                             Minimum="0">
                    <ProgressBar.Style>
                        <Style TargetType="ProgressBar">
                            <Setter Property="Foreground" Value="Red" />
                            <Setter Property="Height" Value="10" />
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
                <TextBlock Text="{Binding Popularity}" Margin="10,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold"/>-->
            </StackPanel>

            <!--<Expander Grid.Column="1" 
                      Grid.Row="1" 
                      Header="More..." 
                      Margin="0,5,10,0" 
                      Style="{StaticResource MinimalExpanderStyle}">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Wavelegths :" Margin="5"/>
                        <ItemsControl ItemsSource="{Binding Wavelengths}" Margin="10,5,10,5"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Astronomy :" Margin="5" />
                        <ItemsControl ItemsSource="{Binding Astronomy}" Margin="10,5,10,5"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Links :" Margin="5"/>
                        <ItemsControl ItemsSource="{Binding Links}" Margin="10,5,10,5"/>
                    </StackPanel>
                </StackPanel>
            </Expander>-->
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="SearchOptionsItemDataTemplate">
        <DockPanel>
            <CheckBox Margin="10,0,10,10" 
                      DockPanel.Dock="Left" 
                      IsChecked="{Binding IsEnabled, Mode=TwoWay}">
            </CheckBox>
            <TextBlock Text="{Binding Caption}" 
                               Margin="10"
                               Height="30"
                               VerticalAlignment="Center" 
                               DockPanel.Dock="Left"/>
            <Grid DockPanel.Dock="Right">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="10" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" Grid.Row="0">
                    <ContentControl Content="{Binding CurrentView}" HorizontalAlignment="Stretch" Margin="10" IsEnabled="{Binding IsEnabled}"/>
                </Border>

                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0" Margin="10,0,0,0">
                    <Button Style="{StaticResource NoFocusableButton}" 
                            Margin="0,0,5,0" 
                            VerticalAlignment="Center"
                            IsEnabled="{Binding CanAdd, Mode=TwoWay}"
                            Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.AddItemCommand}"
                            CommandParameter="{Binding}">
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <Border BorderBrush="DarkGray" Name="Border" BorderThickness="1">
                                    <Rectangle Fill="Black" Height="10" Width="10" Name="Rect" Margin="5">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource appbar_add}" Stretch="Fill" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Border>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=IsMouseOver}" Value="True">
                                        <Setter TargetName="Rect" Property="Fill" Value="Red" />
                                        <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>
                    <Button Style="{StaticResource NoFocusableButton}" 
                            Margin="0,0,5,0" 
                            VerticalAlignment="Center"
                            IsEnabled="{Binding CanModify}"
                            Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.UpdateItemCommand}"
                            CommandParameter="{Binding}">
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <Border BorderBrush="DarkGray" Name="Border" BorderThickness="1">
                                    <Rectangle Fill="Black" Height="10" Width="10" Name="Rect" Margin="5">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource appbar_check}" Stretch="Fill" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Border>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=IsMouseOver}" Value="True">
                                        <Setter TargetName="Rect" Property="Fill" Value="Red" />
                                        <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>
                </StackPanel>
                <!--<Line Stretch="Fill" 
                      Stroke="DarkGray"
                      StrokeThickness="1"
                      X2="1"
                      Grid.ColumnSpan="2"
                      Grid.Row="1"
                      Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:SearchOptions}}, Path=Width}"/>-->
            </Grid>
        </DockPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type model:CoordinatesViewModel}">
        <views:CoordinatesView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type model:EpochViewModel}">
        <ComboBox ItemsSource="{Binding Items}" Margin="30,0,0,0"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type model:EquinoxViewModel}">
        <ComboBox ItemsSource="{Binding Items}" Margin="30,0,0,0"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type model:RadiusViewModel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>
            <Slider Minimum="0" 
                    Maximum="360" 
                    Value="{Binding Radius, Mode=OneWayToSource}" 
                    Grid.Column="0" 
                    Grid.ColumnSpan="3" 
                    Grid.Row="0" 
                    VerticalAlignment="Center" 
                    Margin="30,0,0,0"/>
            
            <TextBox Text="{Binding Radius}" Margin="10,0,0,0" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center"/>
            <ComboBox ItemsSource="{Binding Units}" Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" />
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type model:ObjectNameViewModel}">
        <TextBox Text="{Binding ObjectName}" Margin="30,0,0,0"/>
    </DataTemplate>

    <DataTemplate x:Key="SearchPaneTemplate" DataType="{x:Type model:SearchOptionsPaneViewModel}">
        <DockPanel Grid.Row="1" Name="Container" Panel.ZIndex="-10">
            <Border BorderBrush="DarkGray" 
                            BorderThickness="1" 
                            HorizontalAlignment="Left" 
                            Background="White">
                <TabControl ItemsSource="{Binding CategoriesContainer.Categories}" 
                                    ItemTemplate="{StaticResource HeaderTemplate}"
                                    SelectedItem="{Binding CategoriesContainer.SelectedCategory}"
                                    HorizontalAlignment="Left">
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabPanel}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </TabControl.Resources>
                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding CurrentView}" />
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
            </Border>
            <DockPanel.RenderTransform>
                <TranslateTransform X="0" Y="1"/>
            </DockPanel.RenderTransform>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding State}" Value="Expanded">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="Container"
                                                                   Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeySpline="0.25,1,0.05,1"
                                                              KeyTime="00:00:00.750"
                                                              Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="Container"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeySpline="0.25,1,0.05,1"
                                                              KeyTime="00:00:00.750"
                                                              Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="Collapsed">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Container"
                                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                               DecelerationRatio=".9">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.750"
                                                          Value="-700" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Container"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeySpline="0.25,1,0.05,1"
                                                          KeyTime="00:00:00.750"
                                                          Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>